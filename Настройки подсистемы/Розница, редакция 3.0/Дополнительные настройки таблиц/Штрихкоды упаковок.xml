<FixedStructure xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="FixedStructure">
	<Property name="Ключ">
		<Value xmlns:d3p1="http://v8.1c.ru/8.1/data/enterprise/current-config" xsi:type="d3p1:InformationRegisterRecordKey.SUI_ДополнительныеНастройкиТаблицИнтеграции">
			<d3p1:ТаблицаИнтеграции>ШтрихкодыУпаковок</d3p1:ТаблицаИнтеграции>
		</Value>
	</Property>
	<Property name="Данные">
		<Value xsi:type="Structure">
			<Property name="АлгоритмСозданияШтрихкодаУпаковки">
				<Value xsi:type="Structure">
					<Property name="Алгоритм">
						<Value xsi:type="xs:string">ШтрихкодУпаковки = Справочники.ШтрихкодыУпаковокТоваров.ПолучитьПоЗначениюШтрихкода(ЗначениеШтрихкода);Если ШтрихкодУпаковки = Неопределено Тогда		РезультатРазбора = РазборКодаМаркировкиИССлужебный.РазобратьКодМаркировки(ЗначениеШтрихкода);		Если ЗначениеЗаполнено(РезультатРазбора) Тогда				СтруктураСоздания = Справочники.ШтрихкодыУпаковокТоваров.СтруктураСозданияШтрихкодаУпаковки();		СтруктураСоздания.Номенклатура = Номенклатура;		СтруктураСоздания.Характеристика = Характеристика;		СтруктураСоздания.Серия = Серия;		СтруктураСоздания.Упаковка = Упаковка;		СтруктураСоздания.Штрихкод = РезультатРазбора.НормализованныйКодМаркировки;		СтруктураСоздания.ТипШтрихкода = РезультатРазбора.ТипШтрихкода;		СтруктураСоздания.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар;				ДополнительныеПараметрыСоздания = Справочники.ШтрихкодыУпаковокТоваров			.ДополнительныеПараметрыСозданияШтрихкодовУпаковок();				ШтрихкодУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодУпаковки(СтруктураСоздания, , , , 			ДополнительныеПараметрыСоздания);			КонецЕсли;	КонецЕсли;ШтрихкодТранспортнойУпаковки = Справочники.ШтрихкодыУпаковокТоваров.ПолучитьПоЗначениюШтрихкода(	ЗначениеШтрихкодаТранспортнойУпаковки);Если ШтрихкодТранспортнойУпаковки = Неопределено Тогда		РезультатРазбора = РазборКодаМаркировкиИССлужебный.РазобратьКодМаркировки(ЗначениеШтрихкодаТранспортнойУпаковки);		Если ЗначениеЗаполнено(РезультатРазбора) Тогда				СтруктураСоздания = Справочники.ШтрихкодыУпаковокТоваров.СтруктураСозданияШтрихкодаУпаковки();		СтруктураСоздания.Штрихкод = РезультатРазбора.НормализованныйКодМаркировки;		СтруктураСоздания.ТипШтрихкода = РезультатРазбора.ТипШтрихкода;				Если РезультатРазбора.ВидУпаковки = Перечисления.ВидыУпаковокИС.Логистическая И			РезультатРазбора.СоставКодаМаркировки.Свойство("GTIN") И			ЗначениеЗаполнено(РезультатРазбора.СоставКодаМаркировки.GTIN) Тогда			СтруктураСоздания.ТипУпаковки = Перечисления.ТипыУпаковок.МонотоварнаяУпаковка;		Иначе			СтруктураСоздания.ТипУпаковки = Перечисления.ТипыУпаковок.МультитоварнаяУпаковка;		КонецЕсли;				ДополнительныеПараметрыСоздания = Справочники.ШтрихкодыУпаковокТоваров			.ДополнительныеПараметрыСозданияШтрихкодовУпаковок();				ВложенныеШтрихкоды = ?(ЗначениеЗаполнено(ШтрихкодУпаковки),			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ШтрихкодУпаковки),			Неопределено);				ШтрихкодТранспортнойУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодУпаковки(			СтруктураСоздания, ВложенныеШтрихкоды, , , ДополнительныеПараметрыСоздания);			КонецЕсли;	Иначе		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ШтрихкодТранспортнойУпаковки, 		"ТипУпаковки,ВложенныеШтрихкоды.Штрихкод");		Если ЗначенияРеквизитов.ТипУпаковки = Перечисления.ТипыУпаковок.МонотоварнаяУпаковка Или		ЗначенияРеквизитов.ТипУпаковки = Перечисления.ТипыУпаковок.МультитоварнаяУпаковка Тогда				Если ЗначениеЗаполнено(ШтрихкодУпаковки) Тогда						РезультатЗапроса = ЗначенияРеквизитов.ВложенныеШтрихкодыШтрихкод;						Если РезультатЗапроса.Пустой() Тогда				ДобавитьВложенныйШтрихкод = Истина;			Иначе								Выборка = РезультатЗапроса.Выбрать();								ПараметрыОтбора = Новый Структура();				ПараметрыОтбора.Вставить("Штрихкод", ШтрихкодУпаковки);								ДобавитьВложенныйШтрихкод = Не Выборка.НайтиСледующий(ПараметрыОтбора);							КонецЕсли;						Если ДобавитьВложенныйШтрихкод Тогда								ШтрихкодТранспортнойУпаковкиОбъект = ШтрихкодТранспортнойУпаковки.ПолучитьОбъект();								НоваяСтрокаВложенныеШтрихкоды = ШтрихкодТранспортнойУпаковкиОбъект.ВложенныеШтрихкоды.Добавить();				НоваяСтрокаВложенныеШтрихкоды.Штрихкод = ШтрихкодУпаковки;								ШтрихкодТранспортнойУпаковкиОбъект.Записать();							КонецЕсли;					КонецЕсли;			Иначе		ШтрихкодТранспортнойУпаковки = Справочники.ШтрихкодыУпаковокТоваров.ПустаяСсылка();	КонецЕсли;	КонецЕсли;</Value>
					</Property>
				</Value>
			</Property>
			<Property name="АлгоритмНормализацииЗначенияШтрихкода">
				<Value xsi:type="Structure">
					<Property name="Алгоритм">
						<Value xsi:type="xs:string">ТекстОшибки = "";ПримечаниеКРезультатуРазбора = Новый Структура();РезультатРазбора = РазборКодаМаркировкиИССлужебный.РазобратьКодМаркировки(ЗначениеШтрихкода, , ПримечаниеКРезультатуРазбора);Если РезультатРазбора = Неопределено Тогда		Если ПримечаниеКРезультатуРазбора.ИдентификаторОшибки = "КодМаркировкиСоответствуетНесколькимШаблонам" И		ПримечаниеКРезультатуРазбора.РезультатРазбора.Количество() &gt; 0 Тогда				Если ЗначениеЗаполнено(Номенклатура) Тогда						ВидПродукции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ВидПродукцииИС");						Если ЗначениеЗаполнено(ВидПродукции) Тогда								Для индекс = 0 По ПримечаниеКРезультатуРазбора.РезультатРазбора.ВГраница() Цикл										Если ПримечаниеКРезультатуРазбора.РезультатРазбора[индекс].ВидыПродукции.Найти(ВидПродукции) &lt;&gt; Неопределено Тогда						РезультатРазбора = ПримечаниеКРезультатуРазбора.РезультатРазбора[индекс];						Прервать;					КонецЕсли;									КонецЦикла;								Если РезультатРазбора = Неопределено Тогда					ТекстОшибки = НСтр("ru = 'В результатах разбора отсутствуют данные для номенклатуры ""%1"" по виду продукции ""%2"".'");					ТекстОшибки = СтрШаблон(ТекстОшибки, Номенклатура, ВидПродукции);				КонецЕсли;							Иначе				ТекстОшибки = СтрШаблон(НСтр("ru = 'Для номенклатуры ""%1"" не удалось определить вид продукции.'"), Номенклатура);			КонецЕсли;					Иначе			ТекстОшибки = НСтр("ru = 'Не удалось определить номенклатуру.'");		КонецЕсли;				ТекстОшибки = СтрШаблон("%1 %2", ПримечаниеКРезультатуРазбора.ТекстОшибки, ТекстОшибки);			ИначеЕсли ПримечаниеКРезультатуРазбора.Свойство("ТекстОшибки") И ЗначениеЗаполнено(ПримечаниеКРезультатуРазбора.ТекстОшибки) Тогда		ТекстОшибки = ПримечаниеКРезультатуРазбора.ТекстОшибки;	КонецЕсли;	КонецЕсли;Если РезультатРазбора = Неопределено Тогда		Если ПустаяСтрока(ТекстОшибки) Тогда		ТекстОшибки = НСтр("ru = 'Не удалось получить результаты разбора значения штрихкода кода маркировки.'");	КонецЕсли;		ТекстОшибки = СтрШаблон(НСтр("ru = 'Нормализация значения штрихкода: %1 (%2).'"), ТекстОшибки, ЗначениеШтрихкода);	ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);	КонецЕсли;ЗначениеШтрихкода = ?(ЗначениеЗаполнено(РезультатРазбора), РезультатРазбора.НормализованныйКодМаркировки, "");</Value>
					</Property>
				</Value>
			</Property>
		</Value>
	</Property>
</FixedStructure>